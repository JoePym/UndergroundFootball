== Underground Football

This is a project I created to experiment with. It's not a functional app by any stretch of the imagination. I used Bloodbowl (the board game) as a basis, and decided to try out a method of implementing functionality on models using autorequired modules.

The main meat of the project so far is in lib and models. The basic idea is that when you instantiate a Player class, it makes a database query to retrieve his skills, and requires modules based on those skills in. In speed testing, for instantiating a single class, it provides around a 100% slowdown (so taking twice as long to instantiate due to the requires and DB call).

Obviously, when using a method like this, it will be important to reduce instantiations of models (so using SQL queries where appropriate), and I may end up re-doing this as Sinatra, or some method that doesn't involve AR. I also don't like my extensions to Module. They make everything a lot cleaner (outside the extensions!), but they allow for quite a lot of variety.

The entire lib/model structure works..so you can instantiate a player, add skills to him and he uses those skills appropriately. The next stage of the project is to knock up a UI for it, in order to test how those skills work. 

